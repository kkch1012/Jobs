version: '3.8'

# Docker Hub 이미지를 사용하는 배포용 Docker Compose
# 사용법: docker-compose -f docker-compose.hub.yml up

services:
  # FastAPI 메인 서버 (Docker Hub 이미지 사용)
  fastapi:
    image: chanerdy/jobs-api:latest  # 본인의 Docker Hub 사용자명으로 변경
    container_name: jobs_fastapi
    ports:
      - "8000:8000"
    environment:
      - SQLALCHEMY_DATABASE_URI=postgresql://myuser:mypassword@postgres:5432/jobs
      - MONGO_URI=mongodb://admin:yourpassword@mongo:27017/?authSource=admin
      - MONGO_DB_NAME=jobs_db
      - REDIS_URL=redis://redis:6379
      - FASTAPI_SERVER_URL=http://fastapi:8000
      - MCP_SERVER_URL=http://mcp-server:8001
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - SECRET_KEY=${SECRET_KEY:-SUPERSECRETKEY}
      - ACCESS_TOKEN_EXPIRE_MINUTES=60
      - BATCH_SCHEDULE_HOUR=8
      - BATCH_SCHEDULE_MINUTE=0
    depends_on:
      - postgres
      - mongo
      - redis
    networks:
      - jobs_network
    restart: unless-stopped

  # MCP 서버 (Docker Hub 이미지 사용)
  mcp-server:
    image: chanerdy/jobs-mcp:latest  # 본인의 Docker Hub 사용자명으로 변경
    container_name: jobs_mcp_server
    ports:
      - "8001:8001"
    environment:
      - FASTAPI_SERVER_URL=http://fastapi:8000
      - SQLALCHEMY_DATABASE_URI=postgresql://myuser:mypassword@postgres:5432/jobs
      - MONGO_URI=mongodb://admin:yourpassword@mongo:27017/?authSource=admin
      - MONGO_DB_NAME=jobs_db
      - REDIS_URL=redis://redis:6379
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - SECRET_KEY=${SECRET_KEY:-SUPERSECRETKEY}
    depends_on:
      - postgres
      - mongo
      - redis
    networks:
      - jobs_network
    restart: unless-stopped

  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:15-alpine
    container_name: jobs_postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=jobs
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - jobs_network
    restart: unless-stopped

  # MongoDB 데이터베이스
  mongo:
    image: mongo:7.0
    container_name: jobs_mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=yourpassword
      - MONGO_INITDB_DATABASE=jobs_db
    volumes:
      - mongo_data:/data/db
    networks:
      - jobs_network
    restart: unless-stopped

  # Redis 캐시
  redis:
    image: redis:7-alpine
    container_name: jobs_redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - jobs_network
    restart: unless-stopped

networks:
  jobs_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  mongo_data:
    driver: local
  redis_data:
    driver: local 